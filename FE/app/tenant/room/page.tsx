"use client"

import { useEffect, useState } from "react"
import { useRouter } from "next/navigation"
import {
  getTenantProfile,
  getTenantContract,
  formatCurrency,
  formatDate,
  ROOM_TYPE_NAMES,
  type TenantProfile,
  type Contract,
} from "@/lib/tenant-portal-service"

export default function MyRoomPage() {
  const router = useRouter()
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [profile, setProfile] = useState<TenantProfile | null>(null)
  const [contract, setContract] = useState<Contract | null>(null)

  useEffect(() => {
    const token = localStorage.getItem("authToken") || sessionStorage.getItem("authToken")
    const role = localStorage.getItem("userRole") || sessionStorage.getItem("userRole")

    if (!token || role !== "tenant") {
      router.push("/login")
      return
    }

    loadRoomData(token)
  }, [router])

  async function loadRoomData(token: string) {
    try {
      setLoading(true)
      setError(null)
      
      const [profileData, contractData] = await Promise.all([
        getTenantProfile(token),
        getTenantContract(token)
      ])
      
      setProfile(profileData)
      setContract(contractData)
    } catch (err: any) {
      console.error("Failed to load room data:", err)
      setError(err.message || "Kh√¥ng th·ªÉ t·∫£i th√¥ng tin ph√≤ng")
      
      if (err.message?.includes("Unauthorized")) {
        router.push("/login")
      }
    } finally {
      setLoading(false)
    }
  }

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-[400px]">
        <div className="text-lg font-bold uppercase">ƒêang t·∫£i...</div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="bg-destructive/10 neo-card p-4">
        <div className="text-destructive font-bold uppercase mb-1">L·ªói</div>
        <div className="text-sm text-muted-foreground">{error}</div>
      </div>
    )
  }

  if (!profile || !profile.currentUnit) {
    return (
      <div className="bg-muted neo-card p-6 text-center">
        <div className="text-2xl mb-2">üè†</div>
        <div className="font-bold uppercase mb-2">Ch∆∞a C√≥ Ph√≤ng</div>
        <div className="text-sm text-muted-foreground">
          B·∫°n ch∆∞a ƒë∆∞·ª£c g√°n ph√≤ng n√†o. Vui l√≤ng li√™n h·ªá qu·∫£n l√Ω.
        </div>
      </div>
    )
  }

  const unit = profile.currentUnit

  return (
    <div className="space-y-3 animate-slide-up">
      <h1 className="text-xl font-black mb-3">PH√íNG C·ª¶A T√îI</h1>

      {/* Room Header - Compact */}
      <div className="bg-card neo-card p-4 transition-all hover:neo-shadow hover:-translate-y-0.5">
        <div className="flex items-start justify-between mb-3">
          <div className="flex items-center gap-3">
            <div className="text-3xl">üè†</div>
            <div>
              <h2 className="text-xl font-bold">PH√íNG {unit.unitNumber} - T√íA {unit.building}</h2>
              <p className="text-sm text-muted-foreground">
                {ROOM_TYPE_NAMES[unit.roomType] || unit.roomType}
              </p>
            </div>
          </div>
          <div className={`px-2 py-1 neo-border font-bold text-xs ${
            unit.status === 'occupied' 
              ? 'bg-green-100 text-green-900 border-green-900' 
              : 'bg-yellow-100 text-yellow-900 border-yellow-900'
          }`}>
            {unit.status === 'occupied' ? '‚úì ƒêANG ·ªû' : (unit.status?.toUpperCase() || 'N/A')}
          </div>
        </div>

        {/* Quick Stats - Compact */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          <div className="border-l-4 border-black pl-2">
            <div className="text-xs text-muted-foreground uppercase">Di·ªán T√≠ch</div>
            <div className="text-lg font-bold">{unit.squareMeters || 0} m¬≤</div>
          </div>
          <div className="border-l-4 border-black pl-2">
            <div className="text-xs text-muted-foreground uppercase">Gi√° Thu√™</div>
            <div className="text-lg font-bold">{formatCurrency(unit.rentPrice || 0)}</div>
            <div className="text-xs text-muted-foreground">/ th√°ng</div>
          </div>
          <div className="border-l-4 border-black pl-2">
            <div className="text-xs text-muted-foreground uppercase">Ng√†y Thu√™</div>
            <div className="text-sm font-bold">
              {profile.moveInDate ? formatDate(profile.moveInDate) : "N/A"}
            </div>
          </div>
          <div className="border-l-4 border-black pl-2">
            <div className="text-xs text-muted-foreground uppercase">Ti·ªÅn C·ªçc</div>
            <div className="text-lg font-bold">{formatCurrency(unit.depositAmount || 0)}</div>
          </div>
        </div>
      </div>

      <div className="grid md:grid-cols-2 gap-3">
        {/* Room Details */}
        <div className="bg-card neo-card p-3 transition-all hover:neo-shadow hover:-translate-y-0.5">
          <h3 className="text-sm font-black mb-2 flex items-center gap-2">
            <span>üìã</span> CHI TI·∫æT PH√íNG
          </h3>
          <div className="space-y-2">
            <div className="flex justify-between py-1.5 border-b border-gray-300">
              <span className="text-xs text-muted-foreground">S·ªë Ph√≤ng:</span>
              <span className="text-sm font-bold">{unit.unitNumber}</span>
            </div>
            <div className="flex justify-between py-1.5 border-b border-gray-300">
              <span className="text-xs text-muted-foreground">T√≤a Nh√†:</span>
              <span className="text-sm font-bold">{unit.building}</span>
            </div>
            <div className="flex justify-between py-1.5 border-b border-gray-300">
              <span className="text-xs text-muted-foreground">T·∫ßng:</span>
              <span className="text-sm font-bold">{unit.floor || "N/A"}</span>
            </div>
            <div className="flex justify-between py-1.5 border-b border-gray-300">
              <span className="text-xs text-muted-foreground">Di·ªán T√≠ch:</span>
              <span className="text-sm font-bold">{unit.squareMeters} m¬≤</span>
            </div>
            <div className="flex justify-between py-1.5 border-b border-gray-300">
              <span className="text-xs text-muted-foreground">Lo·∫°i Ph√≤ng:</span>
              <span className="text-sm font-bold">{ROOM_TYPE_NAMES[unit.roomType] || unit.roomType}</span>
            </div>
            <div className="flex justify-between py-1.5">
              <span className="text-xs text-muted-foreground">Tr·∫°ng Th√°i:</span>
              <span className="text-sm font-bold">{unit.status === 'occupied' ? 'ƒêang ·ªû' : unit.status}</span>
            </div>
          </div>
        </div>

        {/* Financial Details */}
        <div className="bg-card neo-card p-3 transition-all hover:neo-shadow hover:-translate-y-0.5">
          <h3 className="text-sm font-black mb-2 flex items-center gap-2">
            <span>üí∞</span> TH√îNG TIN T√ÄI CH√çNH
          </h3>
          <div className="space-y-2">
            <div className="flex justify-between py-1.5 border-b border-gray-300">
              <span className="text-xs text-muted-foreground">Gi√° Thu√™/Th√°ng:</span>
              <span className="text-sm font-bold">{formatCurrency(unit.rentPrice || 0)}</span>
            </div>
            <div className="flex justify-between py-1.5 border-b border-gray-300">
              <span className="text-xs text-muted-foreground">Ti·ªÅn C·ªçc:</span>
              <span className="text-sm font-bold">{formatCurrency(unit.depositAmount || 0)}</span>
            </div>
            <div className="flex justify-between py-1.5 border-b border-gray-300">
              <span className="text-xs text-muted-foreground">Ti·ªÅn ƒêi·ªán:</span>
              <span className="text-sm font-bold">{formatCurrency(unit.electricityRate || 3500)}/kWh</span>
            </div>
            <div className="flex justify-between py-1.5 border-b border-gray-300">
              <span className="text-xs text-muted-foreground">Ti·ªÅn N∆∞·ªõc:</span>
              <span className="text-sm font-bold">{formatCurrency(unit.waterRate || 15000)}/m¬≥</span>
            </div>
            <div className="flex justify-between py-1.5">
              <span className="text-xs text-muted-foreground">Internet:</span>
              <span className="text-sm font-bold">{formatCurrency(unit.internetRate || 100000)}/th√°ng</span>
            </div>
          </div>
        </div>
      </div>

      {/* Contract Information */}
      <div className="bg-card neo-card p-3 transition-all hover:neo-shadow hover:-translate-y-0.5">
        <h3 className="text-sm font-black mb-2 flex items-center gap-2">
          <span>üìù</span> TH√îNG TIN H·ª¢P ƒê·ªíNG
        </h3>
        {contract ? (
          <div className="space-y-3">
            <div className="grid md:grid-cols-3 gap-3">
              <div className="border-l-4 border-black pl-2">
                <div className="text-xs text-muted-foreground uppercase">M√£ H·ª£p ƒê·ªìng</div>
                <div className="text-sm font-bold">{contract.contractNumber}</div>
              </div>
              <div className="border-l-4 border-black pl-2">
                <div className="text-xs text-muted-foreground uppercase">Ng√†y B·∫Øt ƒê·∫ßu</div>
                <div className="text-sm font-bold">{formatDate(contract.startDate)}</div>
              </div>
              <div className="border-l-4 border-black pl-2">
                <div className="text-xs text-muted-foreground uppercase">Ng√†y K·∫øt Th√∫c</div>
                <div className="text-sm font-bold">{formatDate(contract.endDate)}</div>
              </div>
            </div>
            
            <div className="grid md:grid-cols-2 gap-3 pt-2 border-t-2 border-black">
              <div className="flex justify-between py-1.5 border-b border-gray-300">
                <span className="text-xs text-muted-foreground">Gi√° Thu√™ H·ª£p ƒê·ªìng:</span>
                <span className="text-sm font-bold">{formatCurrency(contract.rentAmount)}</span>
              </div>
              <div className="flex justify-between py-1.5 border-b border-gray-300">
                <span className="text-xs text-muted-foreground">Ti·ªÅn C·ªçc:</span>
                <span className="text-sm font-bold">{formatCurrency(contract.depositAmount)}</span>
              </div>
            </div>

            <div className="border-l-4 border-black pl-2">
              <div className="text-xs text-muted-foreground uppercase mb-1.5">Ti·ªán √çch Trong H·ª£p ƒê·ªìng</div>
              <div className="flex flex-wrap gap-1.5">
                {contract.utilities.electricity && (
                  <span className="px-1.5 py-0.5 bg-yellow-100 border-2 border-yellow-900 text-yellow-900 text-xs font-bold">
                    ‚ö° ƒêI·ªÜN
                  </span>
                )}
                {contract.utilities.water && (
                  <span className="px-1.5 py-0.5 bg-blue-100 border-2 border-blue-900 text-blue-900 text-xs font-bold">
                    üíß N∆Ø·ªöC
                  </span>
                )}
                {contract.utilities.internet && (
                  <span className="px-1.5 py-0.5 bg-purple-100 border-2 border-purple-900 text-purple-900 text-xs font-bold">
                    üì° INTERNET
                  </span>
                )}
                {contract.utilities.parking && (
                  <span className="px-1.5 py-0.5 bg-green-100 border-2 border-green-900 text-green-900 text-xs font-bold">
                    üÖøÔ∏è B√ÉI ƒê·ªñ XE
                  </span>
                )}
              </div>
            </div>

            <div className="border-l-4 border-black pl-2">
              <div className="text-xs text-muted-foreground uppercase">Tr·∫°ng Th√°i H·ª£p ƒê·ªìng</div>
              <div className={`inline-block px-1.5 py-0.5 neo-border text-xs font-bold mt-1 ${
                contract.status === 'active' 
                  ? 'bg-green-100 text-green-900 border-green-900' 
                  : contract.status === 'expired'
                  ? 'bg-red-100 text-red-900 border-red-900'
                  : 'bg-yellow-100 text-yellow-900 border-yellow-900'
              }`}>
                {contract.status === 'active' ? '‚úì HO·∫†T ƒê·ªòNG' : 
                 contract.status === 'expired' ? '‚ö† H·∫æT H·∫†N' : 
                 contract.status === 'terminated' ? '‚ùå CH·∫§M D·ª®T' : 
                 '‚è≥ CH·ªú DUY·ªÜT'}
              </div>
            </div>

            {contract.landlord && (
              <div className="border-l-4 border-black pl-2">
                <div className="text-xs text-muted-foreground uppercase mb-1.5">Th√¥ng Tin Ch·ªß Nh√†</div>
                <div className="space-y-0.5">
                  <div className="flex items-center gap-2">
                    <span className="text-sm font-bold">{contract.landlord.fullName}</span>
                  </div>
                  <div className="flex items-center gap-2 text-xs text-muted-foreground">
                    üìß {contract.landlord.email}
                  </div>
                  {contract.landlord.phone && (
                    <div className="flex items-center gap-2 text-xs text-muted-foreground">
                      üìû {contract.landlord.phone}
                    </div>
                  )}
                </div>
              </div>
            )}
          </div>
        ) : (
          <div className="text-center py-4 text-muted-foreground">
            <div className="text-2xl mb-1">üìÑ</div>
            <div className="text-sm font-bold">Ch∆∞a C√≥ H·ª£p ƒê·ªìng</div>
            <div className="text-xs">B·∫°n ch∆∞a c√≥ h·ª£p ƒë·ªìng thu√™ ƒëang ho·∫°t ƒë·ªông</div>
          </div>
        )}
      </div>

      {/* Amenities */}
      {unit.amenities && unit.amenities.length > 0 && (
        <div className="bg-card neo-card p-3 transition-all hover:neo-shadow hover:-translate-y-0.5">
          <h3 className="text-sm font-black mb-2 flex items-center gap-2">
            <span>‚ú®</span> TI·ªÜN √çCH
          </h3>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-1.5">
            {unit.amenities.map((amenity, index) => (
              <div key={index} className="flex items-center gap-1.5 p-1.5 bg-muted neo-border text-xs">
                <span>‚úì</span>
                <span className="font-bold">{amenity}</span>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Description */}
      {unit.description && (
        <div className="bg-card neo-card p-3 transition-all hover:neo-shadow hover:-translate-y-0.5">
          <h3 className="text-sm font-black mb-2 flex items-center gap-2">
            <span>üìù</span> M√î T√É
          </h3>
          <p className="text-xs text-muted-foreground leading-relaxed">
            {unit.description}
          </p>
        </div>
      )}

      {/* Actions - Compact */}
      <div className="grid md:grid-cols-2 gap-3">
        <button 
          onClick={() => router.push('/tenant/invoices')}
          className="bg-primary text-primary-foreground neo-button py-2 text-sm font-bold uppercase hover:neo-shadow hover:-translate-y-0.5 transition-all"
        >
          üí∞ Xem H√≥a ƒê∆°n
        </button>
        <button 
          onClick={() => router.push('/tenant/maintenance?create=true')}
          className="bg-muted neo-button py-2 text-sm font-bold uppercase hover:neo-shadow hover:-translate-y-0.5 transition-all"
        >
          üîß B√°o C√°o S·ª± C·ªë
        </button>
      </div>
    </div>
  )
}
